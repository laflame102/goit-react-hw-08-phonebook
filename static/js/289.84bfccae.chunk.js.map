{"version":3,"file":"static/js/289.84bfccae.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Spinner/Spinner.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, Form as FormikForm } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  padding: 10px;\n  width: 400px;\n  border: 1px solid black;\n  height: 220px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  font-size: 20px;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n`;\n\nexport const Button = styled.button`\n  background-color: lightblue;\n  margin-top: 28px;\n  border-radius: 4px;\n  font-size: 14px;\n  border: lightgray;\n  padding: 14px;\n  font-size: 18px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectSearchingContact = createSelector(\n  [selectFilter, selectContacts],\n  (filter, contacts) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { Formik } from 'formik';\nimport { Button, Form, Input, Label } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      onSubmit={({ name, number }, actions) => {\n        if (contacts.find(contact => contact.name === name)) {\n          return alert(`${name} is already in contacts`);\n        }\n        dispatch(addContact({ name, number }));\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </Formik>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilter = evt => {\n    dispatch(filterContacts(evt.target.value));\n  };\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input type=\"text\" value={filter} onChange={handleFilter} />\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 300px;\n  height: 50px;\n  padding: 8px;\n  border: 1px solid black;\n  border-radius: 5px;\n`;\n","import { List, Item } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectSearchingContact } from 'redux/selectors';\nimport { deleteContact } from 'redux/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const filteredContacts = useSelector(selectSearchingContact);\n\n  return (\n    <div>\n      <List>\n        {filteredContacts.map(({ id, name, number }) => (\n          <Item key={id}>\n            <p>\n              {name}: {number}\n            </p>\n            <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n              Delete\n            </button>\n          </Item>\n        ))}\n      </List>\n    </div>\n  );\n};\n","import { ColorRing } from 'react-loader-spinner';\n\nconst Spinner = () => {\n  return (\n    <ColorRing\n      visible={true}\n      height=\"40\"\n      width=\"40\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n    />\n  );\n};\n\nexport default Spinner;\n","import { useEffect } from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\nimport Spinner from 'components/Spinner/Spinner';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <Spinner />}\n      {error && <p>{error}</p>}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","FormikForm","Label","Input","Field","Button","selectFilter","state","filter","selectContacts","contacts","items","selectError","error","selectIsLoading","isLoading","selectSearchingContact","createSelector","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","dispatch","useDispatch","useSelector","initialValues","number","onSubmit","actions","find","alert","addContact","resetForm","type","pattern","title","required","Filter","value","onChange","evt","filterContacts","target","List","Item","ContactList","filteredContacts","map","id","onClick","deleteContact","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","useEffect","fetchContacts"],"sourceRoot":""}