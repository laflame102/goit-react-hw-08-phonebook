{"version":3,"file":"static/js/734.1f93ed74.chunk.js","mappings":"mSAiFA,EApEkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MAEjB,OACE,0BACE,SAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,GACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,sBAGA,SAAC,KAAD,CACEC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,SAAU,WAAsBC,GAAa,IAAhCH,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAClBnB,GAASsB,EAAAA,EAAAA,IAAM,CAAEJ,MAAAA,EAAOC,SAAAA,KACxBE,EAAQE,WACT,EARH,UAUE,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,GAAIC,EAAAA,EACJC,KAAK,QACLC,KAAK,QACLC,UAAQ,EACRC,MAAM,QACNC,OAAO,SACPC,WAAS,KAGX,SAAC,KAAD,CACEP,GAAIC,EAAAA,EACJC,KAAK,WACLC,KAAK,WACLC,UAAQ,EACRE,OAAO,SACPD,MAAM,WACNE,WAAS,EACTC,aAAa,sBAGf,SAACC,EAAA,EAAD,CACEP,KAAK,SACLK,WAAS,EACTf,QAAQ,YACRX,GAAI,CAAE6B,GAAI,EAAGC,GAAI,GAJnB,+BAcb,ECrED,EARc,WACZ,OACE,0BACE,SAAC,EAAD,KAGL,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import {\n  Button,\n  TextField,\n  Box,\n  Avatar,\n  Typography,\n  Container,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { Formik, Form, Field } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <Container maxWidth=\"xs\">\n        <Box\n          sx={{\n            marginTop: 12,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Formik\n            initialValues={{\n              email: '',\n              password: '',\n            }}\n            onSubmit={({ email, password }, actions) => {\n              dispatch(logIn({ email, password }));\n              actions.resetForm();\n            }}\n          >\n            <Form>\n              <Field\n                as={TextField}\n                type=\"email\"\n                name=\"email\"\n                required\n                label=\"Email\"\n                margin=\"normal\"\n                fullWidth\n              />\n\n              <Field\n                as={TextField}\n                type=\"password\"\n                name=\"password\"\n                required\n                margin=\"normal\"\n                label=\"Password\"\n                fullWidth\n                autoComplete=\"current-password\"\n              />\n\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Log In\n              </Button>\n            </Form>\n          </Formik>\n        </Box>\n      </Container>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["dispatch","useDispatch","Container","maxWidth","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","component","variant","initialValues","email","password","onSubmit","actions","logIn","resetForm","as","TextField","type","name","required","label","margin","fullWidth","autoComplete","Button","mt","mb"],"sourceRoot":""}